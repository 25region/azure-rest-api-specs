{
  "swagger": "2.0",
  "info": {
    "version": "2021-02-01-preview",
    "title": "Azure Alerts Management Service Resource Provider",
    "description": "APIs for Azure Action Rules CRUD operations."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/actionRules": {
      "get": {
        "description": "List all action rules of the subscription and given input filters",
        "operationId": "ActionRules_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/targetResourceGroup"
          },
          {
            "$ref": "#/parameters/targetResourceType"
          },
          {
            "$ref": "#/parameters/targetResource"
          },
          {
            "$ref": "#/parameters/severity"
          },
          {
            "$ref": "#/parameters/monitorService"
          },
          {
            "$ref": "#/parameters/impactedScope"
          },
          {
            "$ref": "#/parameters/description"
          },
          {
            "$ref": "#/parameters/alertRuleId"
          },
          {
            "$ref": "#/parameters/actionGroup"
          },
          {
            "$ref": "#/parameters/actionRuleName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Return the list of action rules",
            "headers": {
              "x-ms-request-id": {
                "type": "string",
                "description": "Service generated Request ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ActionRulesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GetActionRulesSubscriptionWide": {
            "$ref": "./examples/ActionRules_List_Subscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AlertsManagement/actionRules": {
      "get": {
        "operationId": "ActionRules_ListByResourceGroup",
        "description": "List all action rules of the subscription, created in given resource group and given input filters",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/targetResourceGroup"
          },
          {
            "$ref": "#/parameters/targetResourceType"
          },
          {
            "$ref": "#/parameters/targetResource"
          },
          {
            "$ref": "#/parameters/severity"
          },
          {
            "$ref": "#/parameters/monitorService"
          },
          {
            "$ref": "#/parameters/impactedScope"
          },
          {
            "$ref": "#/parameters/description"
          },
          {
            "$ref": "#/parameters/alertRuleId"
          },
          {
            "$ref": "#/parameters/actionGroup"
          },
          {
            "$ref": "#/parameters/actionRuleName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Return the list of action rules",
            "headers": {
              "x-ms-request-id": {
                "type": "string",
                "description": "Service generated Request ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ActionRulesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GetActionRulesResourceGroupWide": {
            "$ref": "./examples/ActionRules_List_ResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AlertsManagement/actionRules/{actionRuleName}": {
      "get": {
        "description": "Get action rule by name",
        "operationId": "ActionRules_GetByName",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "actionRuleName",
            "in": "path",
            "description": "The name of action rule that needs to be fetched",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns the specific action rule",
            "headers": {
              "x-ms-request-id": {
                "type": "string",
                "description": "Service generated Request ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ActionRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetActionRuleById": {
            "$ref": "./examples/ActionRules_GetById.json"
          }
        }
      },
      "put": {
        "operationId": "ActionRules_CreateUpdate",
        "description": "Create or updates an action rule",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "actionRuleName",
            "in": "path",
            "description": "The name of action rule that needs to be created/updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionRule",
            "in": "body",
            "description": "Action rule to be created/updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActionRule"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns the created/updated action rule",
            "headers": {
              "x-ms-request-id": {
                "type": "string",
                "description": "Service generated Request ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ActionRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a rule that adds an action group to all alerts in a subscription": {
            "$ref": "./examples/ActionRules_Create_or_update_add_action_group_all_alerts_in_subscription.json"
          },
          "Create or update a rule that adds two action groups to all Sev0 and Sev1 alerts in two resource groups": {
            "$ref": "./examples/ActionRules_Create_or_update_add_two_action_groups_all_Sev0_Sev1_two_resource_groups.json"
          },
          "Create or update a rule that removes all action groups from alerts on a specific VM during a one-off maintenance window (1800-2000 at a specific date, Pacific Standard Time)": {
            "$ref": "./examples/ActionRules_Create_or_update_remove_all_action_groups_specific_VM_one-off_maintenance_window.json"
          },
          "Create or update a rule that removes all action groups from all alerts on any VM in two resource groups during a recurring maintenance window (2200-0400 every Sat and Sun, India Standard Time)": {
            "$ref": "./examples/ActionRules_Create_or_update_remove_all_action_groups_recurring_maintenance_window.json"
          },
          "Create or update a rule that removes all action groups outside business hours (Mon-Fri 09:00-17:00, Eastern Standard Time)": {
            "$ref": "./examples/ActionRules_Create_or_update_remove_all_action_groups_outside_business_hours.json"
          },
          "Create or update a rule that removes all action groups from all alerts in a subscription coming from a specific alert rule": {
            "$ref": "./examples/ActionRules_Create_or_update_remove_all_action_groups_all_alerts_in_subscription_from_specific_alert_rule.json"
          }
        }
      },
      "delete": {
        "description": "Delete a given action rule",
        "operationId": "ActionRules_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "actionRuleName",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns true if deleted successfully",
            "headers": {
              "x-ms-request-id": {
                "type": "string",
                "description": "Service generated Request ID."
              }
            },
            "schema": {
              "type": "boolean"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeleteActionRule": {
            "$ref": "./examples/ActionRules_Delete.json"
          }
        }
      },
      "patch": {
        "description": "Update enabled flag and/or tags for the given action rule",
        "operationId": "ActionRules_Update",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "actionRuleName",
            "in": "path",
            "description": "The name that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionRulePatch",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchObject"
            },
            "description": "Parameters supplied to the operation."
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns the created/updated action rule",
            "headers": {
              "x-ms-request-id": {
                "type": "string",
                "description": "Service generated Request ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ActionRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PatchActionRule": {
            "$ref": "./examples/ActionRules_Patch.json"
          }
        }
      }
    }
  },
  "parameters": {
    "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the target subscription.",
      "minLength": 1
    },
    "resourceGroupName": {
      "name": "resourceGroupName",
      "description": "Resource group name where the resource is created.",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "api-version": {
      "name": "api-version",
      "description": "client API version",
      "type": "string",
      "in": "query",
      "required": true,
      "enum": [
        "2021-02-01-preview"
      ],
      "x-ms-enum": {
        "name": "api-version",
        "modelAsString": true
      }
    },
    "targetResourceGroup": {
      "description": "Filter by target resource group name. Default value is select all.",
      "name": "targetResourceGroup",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "targetResource": {
      "description": "Filter by target resource( which is full ARM ID) Default value is select all.",
      "name": "targetResource",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "targetResourceType": {
      "description": "Filter by target resource type. Default value is select all.",
      "name": "targetResourceType",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "monitorService": {
      "description": "Filter by monitor service which generates the alert instance. Default value is select all.",
      "name": "monitorService",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method",
      "enum": [
        "Application Insights",
        "ActivityLog Administrative",
        "ActivityLog Security",
        "ActivityLog Recommendation",
        "ActivityLog Policy",
        "ActivityLog Autoscale",
        "Log Analytics",
        "Nagios",
        "Platform",
        "SCOM",
        "ServiceHealth",
        "SmartDetector",
        "VM Insights",
        "Zabbix"
      ],
      "x-ms-enum": {
        "name": "MonitorService",
        "modelAsString": true
      }
    },
    "severity": {
      "description": "Filter by severity.  Default value is select all.",
      "name": "severity",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method",
      "enum": [
        "Sev0",
        "Sev1",
        "Sev2",
        "Sev3",
        "Sev4"
      ],
      "x-ms-enum": {
        "name": "Severity",
        "modelAsString": true
      }
    },
    "description": {
      "description": "Filter by alert rule description.",
      "name": "description",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "alertRuleId": {
      "description": "Filter by alert rule id.",
      "name": "alertRuleId",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "actionGroup": {
      "description": "Filter by action group configured as part of action rule.",
      "name": "actionGroup",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "actionRuleName": {
      "description": "Filter by action rule name.",
      "name": "name",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "impactedScope": {
      "description": "Filter by impacted/target scope (provide comma separated list for multiple scopes). The value should be a well constructed ARM id of the scope.",
      "name": "impactedScope",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "errorResponse": {
      "description": "An error response from the service.",
      "properties": {
        "error": {
          "$ref": "#/definitions/errorResponseBody"
        }
      }
    },
    "errorResponseBody": {
      "description": "Details of error response.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code, intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "Description of the error, intended for display in user interface."
        },
        "target": {
          "type": "string",
          "description": "Target of the particular error, for example name of the property."
        },
        "details": {
          "type": "array",
          "description": "A list of additional details about the error.",
          "items": {
            "$ref": "#/definitions/errorResponseBody"
          }
        }
      }
    },
    "Resource": {
      "x-ms-azure-resource": true,
      "description": "An azure resource object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource Id"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource type"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource name"
        }
      }
    },
    "ManagedResource": {
      "description": "An azure managed resource object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ]
    },
    "Scopes": {
      "type": "array",
      "description": "List of ARM IDs which will be the target of the given action rule.",
      "items": {
        "type": "string"
      }
    },
    "Condition": {
      "type": "object",
      "description": "Condition to trigger an action rule",
      "properties": {
        "operator": {
          "type": "string",
          "description": "Operator for a given condition",
          "enum": [
            "Equals",
            "NotEquals",
            "Contains",
            "DoesNotContain"
          ],
          "x-ms-enum": {
            "name": "Operator",
            "modelAsString": true
          }
        },
        "values": {
          "type": "array",
          "description": "List of values to match for a given condition.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Conditions": {
      "type": "object",
      "description": "Conditions in alert instance to be matched for a given action rule. Default value is all. Multiple values could be provided with comma separation.",
      "properties": {
        "severity": {
          "description": "Filter alerts by severity",
          "$ref": "#/definitions/Condition"
        },
        "monitorService": {
          "description": "Filter alerts by monitor service",
          "$ref": "#/definitions/Condition"
        },
        "monitorCondition": {
          "description": "Filter alerts by monitor condition",
          "$ref": "#/definitions/Condition"
        },
        "targetResourceType": {
          "description": "Filter alerts by target resource type",
          "$ref": "#/definitions/Condition"
        },
        "alertRuleId": {
          "description": "Filter alerts by alert rule id",
          "$ref": "#/definitions/Condition"
        },
        "description": {
          "description": "Filter alerts by alert rule description",
          "$ref": "#/definitions/Condition"
        },
        "alertContext": {
          "description": "Filter alerts by alert context (payload)",
          "$ref": "#/definitions/Condition"
        }
      }
    },
    "SchedulingConfig": {
      "type": "object",
      "description": "Scheduling configuration for a given action rule",
      "properties": {
        "effectiveFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Scheduling effective from time. Date-Time in ISO-8601 format."
        },
        "effectiveUntil": {
          "type": "string",
          "format": "date-time",
          "description": "Scheduling effective until time. Date-Time in ISO-8601 format."
        },
        "timeZone": {
          "type": "string",
          "description": "Scheduling time zone"
        },
        "recurrences": {
          "type": "array",
          "description": "List of recurrences",
          "items": {
            "$ref": "#/definitions/Recurrences"
          }
        }
      }
    },
    "Recurrences": {
      "type": "object",
      "description": "Recurrence object",
      "discriminator": "recurrenceType",
      "required": [
        "recurrenceType"
      ],
      "properties": {
        "recurrenceType": {
          "type": "string",
          "description": "Specifies when the recurrence should be applied",
          "enum": [
            "Daily",
            "Weekly",
            "Monthly"
          ],
          "x-ms-enum": {
            "name": "RecurrenceType",
            "modelAsString": true
          }
        },
        "startTime": {
          "type": "string",
          "description": "Start time for recurrence"
        },
        "endTime": {
          "type": "string",
          "description": "End date for recurrence"
        }
      }
    },
    "Daily": {
      "x-ms-discriminator-value": "Daily",
      "type": "object",
      "description": "Daily recurrence object",
      "required": [
        "startTime",
        "endTime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Recurrences"
        },
        {
          "type": "object"
        }
      ]
    },
    "Weekly": {
      "x-ms-discriminator-value": "Weekly",
      "type": "object",
      "description": "Weekly recurrence object",
      "required": [
        "daysOfWeek"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Recurrences"
        },
        {
          "type": "object",
          "properties": {
            "daysOfWeek": {
              "type": "array",
              "description": "Specifies the values for weekly recurrence pattern",
              "items": {
                "$ref": "#/definitions/DaysOfWeek"
              }
            }
          }
        }
      ]
    },
    "Monthly": {
      "x-ms-discriminator-value": "Monthly",
      "type": "object",
      "description": "Monthly recurrence object",
      "required": [
        "daysOfMonth"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Recurrences"
        },
        {
          "properties": {
            "daysOfMonth": {
              "type": "array",
              "description": "Specifies the values for monthly recurrence pattern",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      ]
    },
    "DaysOfWeek": {
      "type": "string",
      "description": "Days of week",
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "x-ms-enum": {
        "name": "DaysOfWeek",
        "modelAsString": true
      }
    },
    "ActionRule": {
      "description": "Action rule object containing target scopes, conditions and scheduling logic",
      "allOf": [
        {
          "$ref": "#/definitions/ManagedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Action rule properties",
          "$ref": "#/definitions/ActionRuleProperties"
        },
        "systemData": {
          "description": "Action rule system data",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      }
    },
    "ActionRuleProperties": {
      "description": "Action rule properties defining scopes, conditions, scheduling logic for action rule",
      "required": [
        "scopes"
      ],
      "properties": {
        "scopes": {
          "description": "Scopes on which action rule will apply",
          "$ref": "#/definitions/Scopes"
        },
        "conditions": {
          "description": "Conditions on which alerts will be filtered",
          "$ref": "#/definitions/Conditions"
        },
        "schedulingConfig": {
          "description": "Scheduling for action rule",
          "$ref": "#/definitions/SchedulingConfig"
        },
        "actions": {
          "type": "array",
          "description": "Actions to be applied",
          "items": {
            "$ref": "#/definitions/Actions"
          }
        },
        "description": {
          "type": "string",
          "description": "Description of action rule"
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicates if the given action rule is enabled or disabled"
        }
      }
    },
    "Actions": {
      "type": "object",
      "description": "Actions to be applied",
      "discriminator": "actionType",
      "required": [
        "actionType"
      ],
      "properties": {
        "actionType": {
          "type": "string",
          "description": "Action that should be applied",
          "enum": [
            "AddActionGroups",
            "RemoveAllActionGroups"
          ],
          "x-ms-enum": {
            "name": "actionType",
            "modelAsString": true
          }
        }
      }
    },
    "AddActionGroups": {
      "x-ms-discriminator-value": "AddActionGroups",
      "type": "object",
      "description": "Add action groups to action rule",
      "required": [
        "actionGroupIds"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Actions"
        },
        {
          "type": "object",
          "properties": {
            "actionGroupIds": {
              "description": "List of action group Ids to add to action rule",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "RemoveAllActionGroups": {
      "x-ms-discriminator-value": "RemoveAllActionGroups",
      "type": "object",
      "description": "Indicates if all action groups should be removed",
      "allOf": [
        {
          "$ref": "#/definitions/Actions"
        },
        {
          "type": "object"
        }
      ]
    },
    "ActionRulesList": {
      "description": "List of action rules",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "URL to fetch the next set of action rules"
        },
        "value": {
          "type": "array",
          "description": "List of action rules",
          "items": {
            "$ref": "#/definitions/ActionRule"
          }
        }
      }
    },
    "PatchProperties": {
      "description": "Action rule properties supported by patch",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Indicates if the given action rule is enabled or disabled"
        }
      }
    },
    "PatchObject": {
      "description": "Data contract for patch",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties supported by patch operation",
          "$ref": "#/definitions/PatchProperties"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags to be updated"
        }
      }
    }
  }
}
