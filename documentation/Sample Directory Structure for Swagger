When creating a OpenAPI specification (a.k.a Swagger), the sample directory structure you have to follow is represented here:


\---specification
    +---automation
    |   \---resource-manager
    |       \---Microsoft.Automation
    |       |   \---stable
    |       |       \---2015-10-31
    |       |           \---examples
    |       \---readme.md
    +---batch
    |   +---data-plane
    |   |   \---Microsoft.Batch
    |   |   |   \---stable
    |   |   |   |   +---2015-12-01.2.2
    |   |   |   |   +---2016-02-01.3.0
    |   |   |   |   +---2016-07-01.3.1
    |   |   |   |   +---2017-01-01.4.0
    |   |   |   |       \---examples
    |   |   |   \---preview
    |   |   |       \---2017-05-01.5.0
    |   |   \---readme.md
    |   \---resource-manager
    |       \---Microsoft.Batch
    |       |   +---stable
    |       |       +---2015-12-01
    |       |       +---2017-01-01
    |       |           \---examples
    |       |       +---2017-05-01
    |       |           \---examples
    |       \---readme.md
    +---billing
        \---resource-manager
            \---Microsoft.Billing
            |   \---stable
            |   |   +---2017-02-27-preview
            |   |       \---examples
            |   +---preview
            |       \---2017-04-24-preview
            |           \---examples
            \---readme.md



Alternatively, you can always look at any of the [existing resource providers](https://github.com/Azure/azure-rest-api-specs/tree/master/specification) and follow the same structure. Sample configuration files can be found [here](/\(WIP\)-Welcome-Service-Partners!/Sample-ReadME/Sample-Files).

In the directory structure above you will notice that there are a few key things that are needed:
    1. A `service team name folder` under the `specification` folder (ex: automation or batch or billing in the example above).
    2. A `resource-manager` and/or `data-plane` folder under your service team name folder. Use the `resource-manager` (for ARM resources) and `data-plane` (for everything else) . 
    3. The autorest configuration file ([`readme.md`](/\(WIP\)-Welcome-Service-Partners!/Sample-ReadME)) for the resource provider should be inside the `resource-manager` and `data-plane` folders. Create your readme.md and sdk config readme.mds' following the same pattern as other service teams ([`sample`](https://github.com/Azure/azure-rest-api-specs/blob/master/documentation/samplefiles/Microsoft.YourServiceName/stable/YYYY-MM-DD/YourServiceName.json)).
    4. A `Microsoft.ResourceProviderName` folder, also inside the `resource-manager` and `data-plane` folders. This folder will hold your OpenAPI specifications and examples (ex: Microsoft.Automation, Microsoft.Batch in the example above).
    5. A `stable` and/or `preview` folder under the resource provider folder. Swaggers of service/features/resource type endpoints in **Public Preview** go to `preview` folder; swaggers of ONLY **GA** service/features/resource types/endpoints go to `stable` folder. Swaggers and updates public in the master branch of the public repository (azure-rest-api-specs) should be treated as contract with Azure customers, need to meet quality criteria defined with [Swagger KPIs](https://aka.ms/swaggerkpis), and strictly follow [Azure Breaking Changes Policy](https://aka.ms/AzBreakingChangesPolicy) for further updating, no matter in `preview` folder or `stable` folder. 
    6. Your API version folder goes under the `stable` and `preview` folders. This folder will contain the OpenAPI specifications and an example folder. Please follow the **`YYYY-MM-DD`** format. And please **ensure consistency between the API version in the OpenAPI specifications and API version in the folder structure**.
    7. An examples folder is under your API version folder. The example folder will contain the [`x-ms-examples`](https://github.com/Azure/azure-rest-api-specs/blob/master/documentation/x-ms-examples.md) files.

Go back to [Getting started with OpenAPI specifications](https://github.com/Azure/azure-rest-api-specs/blob/master/documentation/Getting%20started%20with%20OpenAPI%20specifications.md).
